2024-06-05 00:50:56.969 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-06-05 00:50:57.050 [main] INFO  c.r.fees.FeesManagementApplication - Starting FeesManagementApplication using Java 17.0.11 with PID 6156 (C:\Prajeesh\Services\fees-service\target\classes started by Akash in C:\Prajeesh\Services\fees-service)
2024-06-05 00:50:57.051 [main] INFO  c.r.fees.FeesManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-06-05 00:50:58.643 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-05 00:50:58.846 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 194 ms. Found 1 JPA repository interface.
2024-06-05 00:50:59.245 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=25a69700-642d-3d40-bba5-72e5333a2886
2024-06-05 00:50:59.660 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-05 00:50:59.668 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-06-05 00:50:59.674 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-06-05 00:50:59.678 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-06-05 00:50:59.682 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-06-05 00:51:00.131 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2024-06-05 00:51:00.147 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2024-06-05 00:51:00.147 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-06-05 00:51:00.147 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-06-05 00:51:00.255 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-06-05 00:51:00.255 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3142 ms
2024-06-05 00:51:00.888 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-06-05 00:51:01.159 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:~/feesdb user=SA
2024-06-05 00:51:01.167 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-06-05 00:51:01.177 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-ui'. Database available at 'jdbc:h2:~/feesdb'
2024-06-05 00:51:01.480 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-05 00:51:01.554 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.8.Final
2024-06-05 00:51:01.599 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-06-05 00:51:01.898 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-05 00:51:01.954 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-05 00:51:03.278 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-05 00:51:03.327 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-05 00:51:04.688 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-05 00:51:06.458 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-06-05 00:51:06.573 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-06-05 00:51:06.598 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-06-05 00:51:06.696 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-06-05 00:51:06.793 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-06-05 00:51:06.793 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2024-06-05 00:51:06.818 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2024-06-05 00:51:07.235 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2024-06-05 00:51:07.239 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2024-06-05 00:51:07.243 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-06-05 00:51:07.243 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1717534267243 with initial instances count: 1
2024-06-05 00:51:07.260 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application FEES-SERVICE with eureka with status UP
2024-06-05 00:51:07.260 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1717534267260, current=UP, previous=STARTING]
2024-06-05 00:51:07.260 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2024-06-05 00:51:07.260 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_FEES-SERVICE/192.168.1.58:FEES-SERVICE:8082: registering service...
2024-06-05 00:51:07.287 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2024-06-05 00:51:07.287 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8082
2024-06-05 00:51:07.310 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_FEES-SERVICE/192.168.1.58:FEES-SERVICE:8082 - registration status: 204
2024-06-05 00:51:07.478 [main] INFO  c.r.fees.FeesManagementApplication - Started FeesManagementApplication in 11.102 seconds (process running for 11.844)
